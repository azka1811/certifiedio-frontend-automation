name: Daily Certification Health Check

on:
  schedule:
    - cron: '0 18 * * *' # 6:00 PM UTC daily (adjust timezone as needed)
  workflow_dispatch: {}

jobs:
  test-and-email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run DEMO Environment Tests
        env:
          DEMO_URL: ${{ vars.DEMO_URL || 'https://demo.certified.io' }}
        run: |
          npx playwright test --project=demo --reporter=list,json=report/demo-results.json

      - name: Run EBC Environment Tests
        env:
          EBC_URL: ${{ vars.EBC_URL || 'https://ebc45818.certified.io' }}
        run: |
          npx playwright test --project=ebc --reporter=list,json=report/ebc-results.json

      - name: Run ETRAINING Environment Tests
        env:
          ETRAINING_URL: ${{ vars.ETRAINING_URL || 'https://etraining45512.certified.io' }}
        run: |
          npx playwright test --project=etraining --reporter=list,json=report/etraining-results.json

      - name: Generate Combined Report
        run: |
          node scripts/generate-combined-report.js

      - name: Upload HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: certification-health-report
          path: report/

      - name: Send Health Check Email
        if: always()
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
        run: |
          node scripts/send-health-check-report.js